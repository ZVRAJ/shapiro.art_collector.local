{"ast":null,"code":"export const BASE_URL = 'https://api.harvardartmuseums.org';\nexport const KEY = 'apikey=45f0ccdc-cb1b-41e4-aaea-fa5823edcacf';\nexport async function fetchQueryResultsFromTermAndValue(term, value) {\n  try {\n    const response = await fetch(`${BASE_URL}/object?${KEY}&${term}=${encodeURI(value.split('-').join('|'))}`);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchQueryResultsFromURL(url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchQueryResults({\n  century,\n  classification,\n  medium,\n  queryString\n}) {\n  const url = `${BASE_URL}/object?${KEY}&classification=${classification}&century=${century}&medium=${medium}&keyword=${queryString}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchAllCenturies() {\n  if (localStorage.getItem('centuries')) {\n    return JSON.parse(localStorage.getItem('centuries'));\n  }\n\n  const url = `${BASE_URL}/century?${KEY}&size=100&sort=temporalorder`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n    localStorage.setItem('centuries', JSON.stringify(records));\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchAllClassifications() {\n  if (localStorage.getItem('classifications')) {\n    return JSON.parse(localStorage.getItem('classifications'));\n  }\n\n  const url = `${BASE_URL}/classification?${KEY}&size=100&sort=name`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n    localStorage.setItem('classifications', JSON.stringify(records));\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchAllMediums() {\n  if (localStorage.getItem('mediums')) {\n    return JSON.parse(localStorage.getItem('mediums'));\n  }\n\n  const url = `${BASE_URL}/medium?${KEY}&size=100&sort=name`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n    localStorage.setItem('mediums', JSON.stringify(records));\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"sources":["/Users/ZVR/OneDrive/FULLSTACK/shapiro.art_collector.local/src/api/index.js"],"names":["BASE_URL","KEY","fetchQueryResultsFromTermAndValue","term","value","response","fetch","encodeURI","split","join","data","json","error","fetchQueryResultsFromURL","url","fetchQueryResults","century","classification","medium","queryString","fetchAllCenturies","localStorage","getItem","JSON","parse","records","setItem","stringify","fetchAllClassifications","fetchAllMediums"],"mappings":"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","sourcesContent":["export const BASE_URL = 'https://api.harvardartmuseums.org';\nexport const KEY = 'apikey=45f0ccdc-cb1b-41e4-aaea-fa5823edcacf';\n\nexport async function fetchQueryResultsFromTermAndValue(term, value) {\n\ttry {\n\t\tconst response = await fetch(`${BASE_URL}/object?${KEY}&${term}=${encodeURI(value.split('-').join('|'))}`);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow error;\n\t}\n}\n\nexport async function fetchQueryResultsFromURL(url) {\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow error;\n\t}\n}\n\nexport async function fetchQueryResults({\n\tcentury,\n\tclassification,\n\tmedium,\n\tqueryString,\n}) {\n\tconst url = `${BASE_URL}/object?${KEY}&classification=${classification}&century=${century}&medium=${medium}&keyword=${queryString}`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\treturn data;\n\t} catch (error) {\n\t\tthrow error;\n\t}\n}\n\nexport async function fetchAllCenturies() {\n\tif (localStorage.getItem('centuries')) {\n\t\treturn JSON.parse(localStorage.getItem('centuries'));\n\t}\n\tconst url = `${BASE_URL}/century?${KEY}&size=100&sort=temporalorder`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\tconst records = data.records;\n\n\t\tlocalStorage.setItem('centuries', JSON.stringify(records));\n\t\treturn records;\n\n\t} catch (error) {\n\t\tthrow error;\n\t}\n}\n\nexport async function fetchAllClassifications() {\n\tif (localStorage.getItem('classifications')) {\n\t\treturn JSON.parse(localStorage.getItem('classifications'));\n\t}\n\tconst url = `${BASE_URL}/classification?${KEY}&size=100&sort=name`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\tconst records = data.records;\n\n\t\tlocalStorage.setItem('classifications', JSON.stringify(records));\n\t\treturn records;\n\n\t} catch (error) {\n\t\tthrow error;\n\t}\n}\n\nexport async function fetchAllMediums() {\n\tif (localStorage.getItem('mediums')) {\n\t\treturn JSON.parse(localStorage.getItem('mediums'));\n\t}\n\tconst url = `${BASE_URL}/medium?${KEY}&size=100&sort=name`;\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.json();\n\t\tconst records = data.records;\n\n\t\tlocalStorage.setItem('mediums', JSON.stringify(records));\n\t\treturn records;\n\n\t} catch (error) {\n\t\tthrow error;\n\t}\n}"]},"metadata":{},"sourceType":"module"}