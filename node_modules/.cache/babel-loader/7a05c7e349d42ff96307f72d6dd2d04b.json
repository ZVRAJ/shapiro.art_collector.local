{"ast":null,"code":"var _jsxFileName = \"/Users/ZVR/OneDrive/FULLSTACK/shapiro.art_collector.local/src/components/Feature.js\";\nimport React, { Fragment } from 'react'; // Don't touch this import\n\nimport { fetchQueryResultsFromTermAndValue } from '../api';\n/**\n * We need a new component called Searchable which:\n * \n * Has a template like this:\n * \n * <span className=\"content\">\n *  <a href=\"#\" onClick={async (event) => {}}>SOME SEARCH TERM</a>\n * </span>\n *\n * You'll need to read searchTerm, searchValue, setIsLoading, and setSearchResults off of the props.\n * \n * When someone clicks the anchor tag, you should:\n * \n * - preventDefault on the event\n * - call setIsLoading, set it to true\n * \n * Then start a try/catch/finally block:\n * \n * try:\n *  - await the result of fetchQueryResultsFromTermAndValue, passing in searchTerm and searchValue\n *  - send the result to setSearchResults (which will update the Preview component)\n * catch: \n *  - console.error the error\n * finally:\n *  - call setIsLoading, set it to false\n */\n\nconst Searchable = ({\n  searchTerm,\n  searchValue,\n  setIsLoading,\n  setSearchResults\n}) => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    onClick: async event => {\n      event.preventDefault();\n      setIsLoading(true);\n\n      try {\n        let results = await fetchQueryResultsFromTermAndValue(searchTerm, searchValue);\n        setSearchResults(results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, searchTerm));\n};\n/**\n * We need a new component called Feature which looks like this when no featuredResult is passed in as a prop:\n * \n * <main id=\"feature\"></main>\n * \n * And like this when one is:\n * \n * <main id=\"feature\">\n *   <div className=\"object-feature\">\n *     <header>\n *       <h3>OBJECT TITLE</h3>\n *       <h4>WHEN IT IS DATED</h4>\n *     </header>\n *     <section className=\"facts\">\n *       <span className=\"title\">FACT NAME</span>\n *       <span className=\"content\">FACT VALUE</span>\n *       <span className=\"title\">NEXT FACT NAME</span>\n *       <span className=\"content\">NEXT FACT VALUE</span>\n *     </section>\n *     <section className=\"photos\">\n *       <img src=IMAGE_URL alt=SOMETHING_WORTHWHILE />\n *     </section>\n *   </div>\n * </main>\n * \n * The different facts look like this: title, dated, images, primaryimageurl, description, culture, style, \n * technique, medium, dimensions, people, department, division, contact, creditline\n * \n * The <Searchable /> ones are: culture, technique, medium (first toLowerCase it), and person.displayname (one for each PEOPLE)\n * \n * NOTE: people and images are likely to be arrays, and will need to be mapped over if they exist\n * \n * This component should be exported as default.\n */\n\n\nconst Feature = props => {\n  const {\n    featuredResult\n  } = props;\n  return featuredResult ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"main\", {\n    id: \"feature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"object-feature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, featuredResult.title), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, featuredResult.dated)), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"facts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, featuredResult.description), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \" STYLE: \", featuredResult.style), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \" DIMENSIONS: \", featuredResult.dimensions), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, featuredResult.division), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \" CONTACT: \", featuredResult.contact), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \" CREDIT: \", featuredResult.creditline), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 8\n    }\n  }, \" CULTURE: \", /*#__PURE__*/React.createElement(Searchable, Object.assign({\n    searchTerm: featuredResult.culture,\n    searchValue: featuredResult.culture\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 44\n    }\n  })))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }\n  }, \" TECHNIQUE: \", /*#__PURE__*/React.createElement(Searchable, Object.assign({\n    searchTerm: featuredResult.technique,\n    searchValue: featuredResult.technique\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 46\n    }\n  })))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 8\n    }\n  }, \" MEDIUM: \", /*#__PURE__*/React.createElement(Searchable, Object.assign({\n    searchTerm: featuredResult.medium,\n    searchValue: featuredResult.medium\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 43\n    }\n  })))), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 8\n    }\n  }, \" PEOPLE(S):\", featuredResult.people ? featuredResult.people.map((person, index) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: `${person} ${index}`,\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Searchable, Object.assign({\n      searchTerm: featuredResult.people.displayname,\n      searchValue: featuredResult.people.displayname\n    }, props, featuredResult.people.displayname ? featuredResult.people.displayname : null, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }\n    })), \" \");\n  }) : null))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"photos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 6\n    }\n  }, featuredResult.images ? featuredResult.images.map((primaryimageurl, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `${primaryimageurl} ${index}`,\n      className: \"photos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 16\n      }\n    }, featuredResult.primaryimageurl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: featuredResult.primaryimageurl,\n      alt: featuredResult.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }) : null);\n  }) : null)))) : /*#__PURE__*/React.createElement(\"main\", {\n    id: \"feature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Feature;","map":{"version":3,"sources":["/Users/ZVR/OneDrive/FULLSTACK/shapiro.art_collector.local/src/components/Feature.js"],"names":["React","Fragment","fetchQueryResultsFromTermAndValue","Searchable","searchTerm","searchValue","setIsLoading","setSearchResults","event","preventDefault","results","error","console","Feature","props","featuredResult","title","dated","description","style","dimensions","division","contact","creditline","culture","technique","medium","people","map","person","index","displayname","images","primaryimageurl"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\n\n// Don't touch this import\nimport { fetchQueryResultsFromTermAndValue } from '../api';\n\n/**\n * We need a new component called Searchable which:\n * \n * Has a template like this:\n * \n * <span className=\"content\">\n *  <a href=\"#\" onClick={async (event) => {}}>SOME SEARCH TERM</a>\n * </span>\n *\n * You'll need to read searchTerm, searchValue, setIsLoading, and setSearchResults off of the props.\n * \n * When someone clicks the anchor tag, you should:\n * \n * - preventDefault on the event\n * - call setIsLoading, set it to true\n * \n * Then start a try/catch/finally block:\n * \n * try:\n *  - await the result of fetchQueryResultsFromTermAndValue, passing in searchTerm and searchValue\n *  - send the result to setSearchResults (which will update the Preview component)\n * catch: \n *  - console.error the error\n * finally:\n *  - call setIsLoading, set it to false\n */\nconst Searchable = ({searchTerm, searchValue, setIsLoading, setSearchResults}) => {\n\treturn (\n\t\t<span className=\"content\">\n\t\t\t<a href=\"#\" onClick={async (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tsetIsLoading(true);\n\t\t\t\ttry {\n\t\t\t\t\tlet results = await fetchQueryResultsFromTermAndValue(searchTerm, searchValue);\n\t\t\t\t\tsetSearchResults(results)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t} finally {\n\t\t\t\t\tsetIsLoading(false)\n\t\t\t\t}\n\t\t\t}}>{searchTerm}</a>\n\t\t</span>\n\t)\n}\n\n/**\n * We need a new component called Feature which looks like this when no featuredResult is passed in as a prop:\n * \n * <main id=\"feature\"></main>\n * \n * And like this when one is:\n * \n * <main id=\"feature\">\n *   <div className=\"object-feature\">\n *     <header>\n *       <h3>OBJECT TITLE</h3>\n *       <h4>WHEN IT IS DATED</h4>\n *     </header>\n *     <section className=\"facts\">\n *       <span className=\"title\">FACT NAME</span>\n *       <span className=\"content\">FACT VALUE</span>\n *       <span className=\"title\">NEXT FACT NAME</span>\n *       <span className=\"content\">NEXT FACT VALUE</span>\n *     </section>\n *     <section className=\"photos\">\n *       <img src=IMAGE_URL alt=SOMETHING_WORTHWHILE />\n *     </section>\n *   </div>\n * </main>\n * \n * The different facts look like this: title, dated, images, primaryimageurl, description, culture, style, \n * technique, medium, dimensions, people, department, division, contact, creditline\n * \n * The <Searchable /> ones are: culture, technique, medium (first toLowerCase it), and person.displayname (one for each PEOPLE)\n * \n * NOTE: people and images are likely to be arrays, and will need to be mapped over if they exist\n * \n * This component should be exported as default.\n */\nconst Feature = (props) => {\n\tconst { featuredResult } = props;\n\treturn (featuredResult)\n\t\t? <>\n\t\t\t<main id=\"feature\">\n\t\t\t\t<div className=\"object-feature\">\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<h3>{featuredResult.title}</h3>\n\t\t\t\t\t\t<h4>{featuredResult.dated}</h4>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section className=\"facts\">\n\t\t\t\t\t\t<span className=\"title\">{featuredResult.description}</span>\n\t\t\t\t\t\t<span className=\"content\"> STYLE: {featuredResult.style}</span>\n\t\t\t\t\t\t<span className=\"content\"> DIMENSIONS: {featuredResult.dimensions}</span>\n\t\t\t\t\t\t<span className=\"content\">{featuredResult.division}</span>\n\t\t\t\t\t\t<span className=\"content\"> CONTACT: {featuredResult.contact}</span>\n\t\t\t\t\t\t<span className=\"content\"> CREDIT: {featuredResult.creditline}</span>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"content\"> CULTURE: <Searchable\n\t\t\t\t\t\t\t\tsearchTerm={featuredResult.culture}\n\t\t\t\t\t\t\t\tsearchValue={featuredResult.culture}\n\t\t\t\t\t\t\t\t{...props} />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"content\"> TECHNIQUE: <Searchable\n\t\t\t\t\t\t\t\tsearchTerm={featuredResult.technique}\n\t\t\t\t\t\t\t\tsearchValue={featuredResult.technique}\n\t\t\t\t\t\t\t\t{...props} />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"content\"> MEDIUM: <Searchable\n\t\t\t\t\t\t\t\tsearchTerm={featuredResult.medium}\n\t\t\t\t\t\t\t\tsearchValue={featuredResult.medium}\n\t\t\t\t\t\t\t\t{...props} />\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"content\"> PEOPLE(S):\n\t\t\t\t\t\t\t\t{featuredResult.people\n\t\t\t\t\t\t\t\t\t? featuredResult.people.map((person, index) => {\n\t\t\t\t\t\t\t\t\t\treturn <span\n\t\t\t\t\t\t\t\t\t\t\tkey={`${person} ${index}`}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"content\">\n\t\t\t\t\t\t\t\t\t\t\t<Searchable\n\t\t\t\t\t\t\t\t\t\t\t\tsearchTerm={featuredResult.people.displayname}\n\t\t\t\t\t\t\t\t\t\t\t\tsearchValue={featuredResult.people.displayname}\n\t\t\t\t\t\t\t\t\t\t\t\t{...props}\n\n\t\t\t\t\t\t\t\t\t\t\t\t{...featuredResult.people.displayname\n\t\t\t\t\t\t\t\t\t\t\t\t\t? featuredResult.people.displayname\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/> </span>\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"photos\">\n\t\t\t\t\t\t{featuredResult.images\n\t\t\t\t\t\t\t? featuredResult.images.map((primaryimageurl, index) => {\n\t\t\t\t\t\t\t\treturn <div\n\t\t\t\t\t\t\t\t\tkey={`${primaryimageurl} ${index}`}\n\t\t\t\t\t\t\t\t\tclassName=\"photos\">\n\t\t\t\t\t\t\t\t\t{featuredResult.primaryimageurl\n\t\t\t\t\t\t\t\t\t\t? <img src={featuredResult.primaryimageurl} alt={featuredResult.description} />\n\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</> : <main id=\"feature\"></main>\n}\n\nexport default Feature;"]},"metadata":{},"sourceType":"module"}