{"ast":null,"code":"var _jsxFileName = \"/Users/ZVR/OneDrive/FULLSTACK/shapiro.art_collector.local/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; // These imports won't work until you fix ./components/index.js\n\nimport { Feature, Loading, Preview, Search, Title } from './components';\n\nconst App = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [featuredResult, setFeaturedResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  /**\n   * We are at the App level component, which is top-most. Any state which needs to be shared between immediate children should\n   * be made here, so create state pairs using useState() for:\n   * \n   * searchResults, setSearchResults (default should be this object:  {info: {}, records: []} )\n   * featuredResult, setFeaturedResult (default should be null)\n   * isLoading, setIsLoading (default should be false)\n   */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    setIsLoading: setIsLoading,\n    setSearchResults: setSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Preview, {\n    searchResults: searchResults,\n    setIsLoading: setIsLoading,\n    setSearchResults: setSearchResults,\n    setFeaturedResult: setFeaturedResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Feature, {\n    featuredResult: featuredResult,\n    setIsLoading: setIsLoading,\n    setSearchResults: setSearchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }\n  }) : null);\n};\n/**\n * Boostrap the <App /> component into the '#app' element in the DOM,\n * using ReactDOM.render();\n */\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }\n}), document.getElementById('app'));","map":{"version":3,"sources":["/Users/ZVR/OneDrive/FULLSTACK/shapiro.art_collector.local/src/index.js"],"names":["React","useState","ReactDOM","Feature","Loading","Preview","Search","Title","App","searchResults","setSearchResults","featuredResult","setFeaturedResult","isLoading","setIsLoading","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,SACEC,OADF,EAEEC,OAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,KALF,QAMO,cANP;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAE,EAAF,CAAlD;AAIA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AAEA;;;;;;;;;AASA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEL,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,eAIL,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEa,YAAtB;AAAoC,IAAA,gBAAgB,EAAEJ,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJK,eAML,oBAAC,OAAD;AAAS,IAAA,aAAa,EAAED,aAAxB;AAAuC,IAAA,YAAY,EAAEK,YAArD;AAAmE,IAAA,gBAAgB,EAAEJ,gBAArF;AAAuG,IAAA,iBAAiB,EAAEE,iBAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANK,eAQL,oBAAC,OAAD;AAAS,IAAA,cAAc,EAAED,cAAzB;AAAyC,IAAA,YAAY,EAAEG,YAAvD;AAAqE,IAAA,gBAAgB,EAAEJ,gBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARK,EAUJG,SAAS,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IAVtB,CAAP;AAaD,CA/BD;AAiCA;;;;;;AAIAX,QAAQ,CAACa,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n// These imports won't work until you fix ./components/index.js\nimport {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title\n} from './components';\n\nconst App = () => {\n  const [searchResults, setSearchResults] = useState ([\n    \n  ]);\n\n  const [featuredResult, setFeaturedResult] = useState(null);\n  \n  const [isLoading, setIsLoading] = useState(false);\n  \n  /**\n   * We are at the App level component, which is top-most. Any state which needs to be shared between immediate children should\n   * be made here, so create state pairs using useState() for:\n   * \n   * searchResults, setSearchResults (default should be this object:  {info: {}, records: []} )\n   * featuredResult, setFeaturedResult (default should be null)\n   * isLoading, setIsLoading (default should be false)\n   */\n\n  return <div className=\"app\">\n    {/* <Title /> is static, doesn't need any props */}\n    <Title />\n    {/* <Search /> needs props for setIsLoading and setSearchResults (trigger <Loading /> on search start/end, and transfer results to preview) */}\n    <Search setIsLoading={setIsLoading} setSearchResults={setSearchResults} />\n    {/* <Preview /> needs props for searchResults, setIsLoading and setSearchResults (clicking prev/next buttons), and setFeaturedResult (clicking a preview) */}\n    <Preview searchResults={searchResults} setIsLoading={setIsLoading} setSearchResults={setSearchResults} setFeaturedResult={setFeaturedResult} />\n    {/* <Feature /> needs props for featuredResult, as well as setIsLoading and setSearchResults (clicking on searchable properties) */}\n    <Feature featuredResult={featuredResult} setIsLoading={setIsLoading} setSearchResults={setSearchResults} />\n    {/* <Loading /> is static, but should only render when isLoading is true */}\n    {isLoading ? <Loading /> : null} \n    {/* use a ternary and render null if isLoading is false */}\n  </div>\n}\n\n/**\n * Boostrap the <App /> component into the '#app' element in the DOM,\n * using ReactDOM.render();\n */\nReactDOM.render(<App />, document.getElementById('app'));"]},"metadata":{},"sourceType":"module"}